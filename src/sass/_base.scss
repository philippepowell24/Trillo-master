/*
COLORS

Primary: #eb2f64
Primary light: #FF3366
Primary dark: #BA265D

Grey light 1: #faf9f9
Grey light 2: #f4f2f2
Grey light 3: #f0eeee
Grey light 4: #ccc

Grey dark 1: #333
Grey dark 2: #777
Grey dark 3: #999

*/

/*
Instead of using SASS variables, can use CSS variables.
Benefits : 
Don't require preprocessing
Can be accessed directly in browser dev tools
Can be manipulated in javascript
CSS variables cascade and are inherited
In order to access them globally, we must define them in the :root pseudo class.
The :root pseudo class is like the html selector but with higher specifity.
It is the global parent element.
*/

:root {
  --color-primary: #eb2f64;
  --color-primary-light: #FF3366;
  --color-primary-dark: #BA265D;
  
  --color-grey-light-1: #faf9f9;
  --color-grey-light-2: #f4f2f2;
  --color-grey-light-3:#f0eeee;
  --color-grey-light-4:#ccc;

  --color-grey-dark-1:#333;
  --color-grey-dark-2:#777;
  --color-grey-dark-3:#999;

  --color-white: #fff;

  --shadow-dark: 0 2rem 6rem rgba(0,0,0,.3);
  --shadow-light: 0 2rem 5rem rgba(0, 0, 0, .06);

  --line: .1rem solid var(--color-grey-light-2);

}

// since we cannot use a CSS custom property as a variable for media queries, we need to use SASS variables
$bp-largest: 75em; // 1200 / 16
$bp-large: 68.75em; // 1100 / 16
$bp-medium: 56.25em; // 900 / 16
$bp-small: 37.5em; // 600 / 16
$bp-smallest: 31.25em; // 500 / 16


* {
  margin: 0;
  padding: 0;
}

*, *::after, *::before {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 62.5%;

  @media only screen and (max-width: $bp-large) {
    font-size: 50%;
  }
}

body {
  font-family: 'Open Sans', sans-serif;
  font-weight: 400;
  line-height: 1.6;
  background-image: linear-gradient(to right bottom, var(--color-primary-light), var(--color-primary-dark));
  background-size: cover;
  background-repeat: no-repeat;

  min-height: 100vh;
}